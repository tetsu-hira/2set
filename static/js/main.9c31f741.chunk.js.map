{"version":3,"sources":["components/Header.tsx","components/Footer.tsx","components/Process.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","useState","title","setTitle","useEffect","document","className","type","onChange","e","target","value","onClick","onBlur","Footer","Process","plan","setPlan","time1","setTime1","time2","setTime2","list","setList","data","setData","count","setCount","win","setWin","lose","setLose","drawWin","setDrawWin","drawDraw","setDrawDraw","drawLose","setDrawLose","sort","setSort","addTime1","index","minute","targetPlan","find","elem","nextPlan","marks","Number","prevPlan","i","countPlan","total","filter","plans","name","reduce","sum","element","score","amount","point","length","console","log","addTime2","newList","el1","el2","map","item","idx","gross","addName","result1","addPlan","id","window","scrollTo","top","behavior","elm","documentElement","bottom","scrollHeight","clientHeight","left","delTeam","newPlan","splice","result","result2","handleRemoveTask","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9c31f741.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\n\r\n\r\nconst Header: React.FC = () => {\r\n  const [ title, setTitle ] = useState<string>(\"→この文章を消して大会名や部門名を入力←\")\r\n\r\n  const changeTitle = (e:any) => {\r\n    setTitle(e.target.value);\r\n  }\r\n  const titleClear = () => {\r\n    setTitle('');\r\n  }\r\n  const returnTitle = () => {\r\n    if (!title) {\r\n      setTitle(\"→この文章を消して大会名や部門名を入力←\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Update the document title using the browser API\r\n    if (title === \"→この文章を消して大会名や部門名を入力←\") {\r\n      document.title = \"にせっとまっち\";\r\n    } else {\r\n      document.title = title;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"Header\">\r\n      <div className=\"WebTitle\">「にせっとまっち」</div>\r\n      <input className=\"HeaderTitle\" type=\"text\" onChange={changeTitle} onClick={titleClear} onBlur={returnTitle} value={title} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <div className=\"Footer\">© All rights reserved by Tetsuhiro.Hirabayashi</div>\r\n  )\r\n}\r\n\r\n\r\nexport default Footer;\r\n","import { useState } from \"react\";\r\nimport * as React from 'react';\r\n// import ExcelJS from \"exceljs\";\r\n// import File from \"./File\";\r\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\r\n// import Select from 'react-select';\r\n// import ReactDOM from \"react-dom\";\r\n\r\n\r\ntype Pro = {\r\n  id: number\r\n  name: any\r\n  gross: number\r\n  point: number\r\n  score: number\r\n}\r\n\r\ntype Scr = {\r\n  name: any\r\n  time1: number\r\n  time2: number\r\n  count: number\r\n  marks: number\r\n}\r\n\r\n\r\nconst Process: React.FC = () => {\r\n  const [ plan, setPlan ] = useState<Scr[]>([]);\r\n  const [ time1, setTime1 ] = useState<number>(0);\r\n  const [ time2, setTime2 ] = useState<number>(0);\r\n  const [ list, setList ] = useState<Pro[]>([]);\r\n  const [ data, setData ] = useState<any>();\r\n  const [ count, setCount ] =useState<number>(0);\r\n  const [ win, setWin ] = useState<number>(0);\r\n  const [ lose, setLose ] = useState<number>(0);\r\n  const [ drawWin, setDrawWin ] = useState<number>(0);\r\n  const [ drawDraw, setDrawDraw ] = useState<number>(0);\r\n  const [ drawLose, setDrawLose ] = useState<number>(0);\r\n  const [ sort, setSort ] = useState<any>('');\r\n\r\n\r\n\r\n  const changeData = (e:any) => {\r\n    setData(e.target.value)\r\n    // setCount(Math.random());\r\n  }\r\n  const changeWin = (e:any) => {\r\n    setWin(e.target.value)\r\n    setLose(0);\r\n  }\r\n  const changeDrawWin = (e:any) => {\r\n    setDrawWin(e.target.value)\r\n  }\r\n  const changeDrawDraw = (e:any) => {\r\n    setDrawDraw(e.target.value)\r\n  }\r\n  const changeDrawLose = (e:any) => {\r\n    setDrawLose(e.target.value)\r\n  }\r\n  const addList = () => {\r\n    setList([...list, {\r\n      id: data,\r\n      name: data,\r\n      gross: 0,\r\n      point: 0,\r\n      score: 0,\r\n    }]);\r\n    setData('');\r\n  }\r\n\r\n  // 対戦表に登録したチームの取り消し\r\n  const handleRemoveTask = (index:number) => {\r\n    const delTeam: any = plan.find((elem) => plan[index] === elem )\r\n    const newPlan = [...plan]\r\n    newPlan.splice(index, 1)\r\n    setPlan(newPlan)\r\n    const result: any = newPlan.filter(plans => {\r\n      return plans.name === delTeam.name\r\n    })\r\n    const result1: any = list.find((elem) => elem.name === delTeam.name)\r\n    const result2 = result.length\r\n    result1.gross = result2\r\n  }\r\n\r\n  // 対戦表にチームを登録\r\n  const addPlan = (index: number) => {\r\n    const addName: any = list.find((elem) => list[index] === elem )\r\n    setPlan([...plan, {name: addName.name, time1: 0, time2: 0, count: 0, marks: 0}]);\r\n    const result: any = plan.filter(plans => {\r\n      return plans.name === list[index].name\r\n    })\r\n    const result1 = result.length + 1;\r\n    list[index].gross = result1;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const addTime1 = (index:number, minute:number) => {\r\n    const targetPlan: any = plan.find((elem) => plan[index] === elem)\r\n    targetPlan.time1 = targetPlan.time1 + minute\r\n    setTime1(targetPlan.time1)\r\n    // 奇数か偶数で処理を変える\r\n    if (index % 2 === 0) {\r\n      const nextPlan: any = plan.find((elem) => plan[index + 1] === elem);\r\n      targetPlan.count = (targetPlan.time1 + targetPlan.time2) - (nextPlan.time1 + nextPlan.time2);\r\n      nextPlan.count = (nextPlan.time1 + nextPlan.time2) - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (targetPlan.time1 > nextPlan.time1 && targetPlan.time2 > nextPlan.time2) {\r\n        targetPlan.marks = Number(win);\r\n          nextPlan.marks = Number(lose);\r\n      } else if (targetPlan.time1 < nextPlan.time1 && targetPlan.time2 < nextPlan.time2) {\r\n        targetPlan.marks = Number(lose);\r\n          nextPlan.marks = Number(win);\r\n      } else if ((targetPlan.time1 < nextPlan.time1 && targetPlan.time2 > nextPlan.time2) || (targetPlan.time1 > nextPlan.time1 && targetPlan.time2 < nextPlan.time2)) {\r\n        if ((targetPlan.time1 + targetPlan.time2) > (nextPlan.time1 + nextPlan.time2)) {\r\n          targetPlan.marks = Number(drawWin);\r\n            nextPlan.marks = Number(drawLose);\r\n        } else if ((targetPlan.time1 + targetPlan.time2) < (nextPlan.time1 + nextPlan.time2)) {\r\n          targetPlan.marks = Number(drawLose);\r\n            nextPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n            nextPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n          nextPlan.marks = Number(lose);\r\n      }\r\n    } else {\r\n      const prevPlan: any = plan.find((elem) => plan[index - 1] === elem);\r\n      targetPlan.count = (targetPlan.time1 + targetPlan.time2) - (prevPlan.time1 + prevPlan.time2);\r\n      prevPlan.count = (prevPlan.time1 + prevPlan.time2) - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (targetPlan.time1 > prevPlan.time1 && targetPlan.time2 > prevPlan.time2) {\r\n        targetPlan.marks = Number(win);\r\n          prevPlan.marks = Number(lose);\r\n      } else if (targetPlan.time1 < prevPlan.time1 && targetPlan.time2 < prevPlan.time2) {\r\n        targetPlan.marks = Number(lose);\r\n          prevPlan.marks = Number(win);\r\n      } else if ((targetPlan.time1 < prevPlan.time1 && targetPlan.time2 > prevPlan.time2) || (targetPlan.time1 > prevPlan.time1 && targetPlan.time2 < prevPlan.time2)) {\r\n        if ((targetPlan.time1 + targetPlan.time2) > (prevPlan.time1 + prevPlan.time2)) {\r\n          targetPlan.marks = Number(drawWin);\r\n            prevPlan.marks = Number(drawLose);\r\n        } else if ((targetPlan.time1 + targetPlan.time2) < (prevPlan.time1 + prevPlan.time2)) {\r\n          targetPlan.marks = Number(drawLose);\r\n            prevPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n            prevPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n          prevPlan.marks = Number(lose);\r\n      }\r\n    }\r\n    // ここから繰り返し処理\r\n    for ( let i = 0; i < list.length; i++ ) {\r\n      const countPlan: any = list.find((elem) => list[i] === elem)\r\n      // 得失点の合計値をtotalに代入\r\n      const sumCount: any = plan.filter(plans => {\r\n        return plans.name === countPlan.name\r\n      })\r\n      const total = sumCount.reduce(function(sum: number, element: any) {\r\n        return sum + element.count;\r\n      }, 0);\r\n      // 合計をlistに反映\r\n      const update: any = list.find((elem) => elem.name === countPlan.name);\r\n      update.score = total;\r\n      // 勝ち点の合計値をamountに代入\r\n      const sumMarks: any = plan.filter(plans => {\r\n        return plans.name === countPlan.name\r\n      })\r\n      const amount = sumMarks.reduce(function(sum: number, element: any) {\r\n        return sum + element.marks;\r\n      }, 0);\r\n      // 合計をlistに反映\r\n      const overwrite: any = list.find((elem) => elem.name === countPlan.name);\r\n      overwrite.point = amount;\r\n    }\r\n    // ここまで繰り返し\r\n    // コンソールでエラーを回避\r\n    console.log(\"ここからエラー回避\");\r\n    console.log(time1);\r\n    console.log(count);\r\n  }\r\n  const addTime2 = (index:number, minute:number) => {\r\n    const targetPlan: any = plan.find((elem) => plan[index] === elem )\r\n    targetPlan.time2 = targetPlan.time2 + minute\r\n    setTime2(targetPlan.time2)\r\n    // 奇数か偶数で処理を変える\r\n    if (index % 2 === 0) {\r\n      const nextPlan: any = plan.find((elem) => plan[index + 1] === elem);\r\n      targetPlan.count = (targetPlan.time1 + targetPlan.time2) - (nextPlan.time1 + nextPlan.time2);\r\n      nextPlan.count = (nextPlan.time1 + nextPlan.time2) - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (targetPlan.time1 > nextPlan.time1 && targetPlan.time2 > nextPlan.time2) {\r\n        targetPlan.marks = Number(win);\r\n          nextPlan.marks = Number(lose);\r\n      } else if (targetPlan.time1 < nextPlan.time1 && targetPlan.time2 < nextPlan.time2) {\r\n        targetPlan.marks = Number(lose);\r\n          nextPlan.marks = Number(win);\r\n      } else if ((targetPlan.time1 < nextPlan.time1 && targetPlan.time2 > nextPlan.time2) || (targetPlan.time1 > nextPlan.time1 && targetPlan.time2 < nextPlan.time2)) {\r\n        if ((targetPlan.time1 + targetPlan.time2) > (nextPlan.time1 + nextPlan.time2)) {\r\n          targetPlan.marks = Number(drawWin);\r\n            nextPlan.marks = Number(drawLose);\r\n        } else if ((targetPlan.time1 + targetPlan.time2) < (nextPlan.time1 + nextPlan.time2)) {\r\n          targetPlan.marks = Number(drawLose);\r\n            nextPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n            nextPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n          nextPlan.marks = Number(lose);\r\n      }\r\n    } else {\r\n      const prevPlan: any = plan.find((elem) => plan[index - 1] === elem);\r\n      targetPlan.count = (targetPlan.time1 + targetPlan.time2) - (prevPlan.time1 + prevPlan.time2);\r\n      prevPlan.count = (prevPlan.time1 + prevPlan.time2) - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (targetPlan.time1 > prevPlan.time1 && targetPlan.time2 > prevPlan.time2) {\r\n        targetPlan.marks = Number(win);\r\n          prevPlan.marks = Number(lose);\r\n      } else if (targetPlan.time1 < prevPlan.time1 && targetPlan.time2 < prevPlan.time2) {\r\n        targetPlan.marks = Number(lose);\r\n          prevPlan.marks = Number(win);\r\n      } else if ((targetPlan.time1 < prevPlan.time1 && targetPlan.time2 > prevPlan.time2) || (targetPlan.time1 > prevPlan.time1 && targetPlan.time2 < prevPlan.time2)) {\r\n        if ((targetPlan.time1 + targetPlan.time2) > (prevPlan.time1 + prevPlan.time2)) {\r\n          targetPlan.marks = Number(drawWin);\r\n            prevPlan.marks = Number(drawLose);\r\n        } else if ((targetPlan.time1 + targetPlan.time2) < (prevPlan.time1 + prevPlan.time2)) {\r\n          targetPlan.marks = Number(drawLose);\r\n            prevPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n            prevPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n          prevPlan.marks = Number(lose);\r\n      }\r\n    }\r\n    // ここから繰り返し処理\r\n    for ( let i = 0; i < list.length; i++ ) {\r\n      const countPlan: any = list.find((elem) => list[i] === elem)\r\n      // 得失点の合計値をtotalに代入\r\n      const sumCount: any = plan.filter(plans => {\r\n        return plans.name === countPlan.name\r\n      })\r\n      const total = sumCount.reduce(function(sum: number, element: any) {\r\n        return sum + element.count;\r\n      }, 0);\r\n      // 合計をlistに反映\r\n      const update: any = list.find((elem) => elem.name === countPlan.name);\r\n      update.score = total;\r\n      // 勝ち点の合計値をamountに代入\r\n      const sumMarks: any = plan.filter(plans => {\r\n        return plans.name === countPlan.name\r\n      })\r\n      const amount = sumMarks.reduce(function(sum: number, element: any) {\r\n        return sum + element.marks;\r\n      }, 0);\r\n      // 合計をlistに反映\r\n      const overwrite: any = list.find((elem) => elem.name === countPlan.name);\r\n      overwrite.point = amount;\r\n    }\r\n    // ここまで繰り返し\r\n    // コンソールでエラーを回避\r\n    console.log(time2);\r\n    console.log(count);\r\n  }\r\n\r\n  /* いずれは実装したい\r\n  const handleClickDownloadButton = async (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    format:  \"xlsx\" | \"csv\"\r\n  ) => {\r\n    e.preventDefault();\r\n\r\n    const workbook = new ExcelJS.Workbook();\r\n    workbook.addWorksheet(\"sheet1\");\r\n    const worksheet = workbook.getWorksheet(\"sheet1\");\r\n\r\n    worksheet.columns = [\r\n      { header: \"No.\", key: \"\", width: 10 },\r\n      { header: \"工程\", key: \"name\", width: 20},\r\n      { header: \"時間\", key: \"time1\", width: 20}\r\n    ];\r\n\r\n    worksheet.addRows(plan);\r\n\r\n    const uint8Array =\r\n      format === \"xlsx\"\r\n        ? await workbook.xlsx.writeBuffer() //xlsxの場合\r\n        : await workbook.csv.writeBuffer(); //csvの場合\r\n    const blob = new Blob([uint8Array], { type: \"application/octet-binary \"});\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"NewFile.\" + format; //フォーマットによって拡張子を変える\r\n    a.click();\r\n    a.remove();\r\n  };\r\n  */\r\n\r\n  // const handleOnDragEnd = (result:any) => {\r\n  //   const items = Array.from(plan);\r\n  //   const [reorderedItem] = items.splice(result.source.index, 1);\r\n  //   items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n  //   setPlan(items);\r\n  // }\r\n\r\n  // 上にスクロール\r\n  const returnTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  // 下にスクロール\r\n  const goBottom = () => {\r\n    var elm = document.documentElement;\r\n    //scrollHeight ページの高さ clientHeight ブラウザの高さ\r\n    var bottom = elm.scrollHeight - elm.clientHeight;\r\n    //垂直方向へ移動\r\n    window.scrollTo({\r\n      behavior: \"smooth\" ,\t// スムーズスクロールにする\r\n      left: 0 ,\t// 左から離れた位置\r\n      top: bottom ,\t// 上から離れた位置\r\n    });\r\n  }\r\n\r\n  // ソート機能を実装\r\n  const sortGross = () => {\r\n    let newList: any;\r\n    newList = list.sort((el1, el2) => {\r\n      if (el1['gross'] < el2['gross']) {\r\n        return 1;\r\n      }\r\n      if (el1['gross'] > el2['gross']) {\r\n        return -1;\r\n      }\r\n        return 0;\r\n    });\r\n    setSort('gross');\r\n    console.log(sort);\r\n    setList(newList);\r\n  };\r\n  const sortPoint = () => {\r\n    let newList: any;\r\n    newList = list.sort((el1, el2) => {\r\n      if (el1['point'] < el2['point']) {\r\n        return 1;\r\n      }\r\n      if (el1['point'] > el2['point']) {\r\n        return -1;\r\n      }\r\n        return 0;\r\n    });\r\n    setSort('point');\r\n    setList(newList);\r\n  };\r\n  const sortScore = () => {\r\n    let newList: any;\r\n    newList = list.sort((el1, el2) => {\r\n      if (el1['score'] < el2['score']) {\r\n        return 1;\r\n      }\r\n      if (el1['score'] > el2['score']) {\r\n        return -1;\r\n      }\r\n        return 0;\r\n    });\r\n    setSort('score');\r\n    setList(newList);\r\n  };\r\n\r\n\r\n  // let sortedLists = useMemo(() => {\r\n  //   let _sortedLists = list.name;\r\n  //   if (sort.key) {\r\n  //     _sortedLists = _sortedLists.sort((a, b) => {\r\n  //       a = a[sort.key];\r\n  //       b = b[sort.key];\r\n\r\n  //       if(a === b) {\r\n  //         return 0;\r\n  //       }\r\n  //       if(a > b) {\r\n  //         return 1 * sort.order;\r\n  //       }\r\n  //       if(a < b) {\r\n  //         return -1 * sort.order;\r\n  //       }\r\n  //     });\r\n  //   }\r\n  //   return _sortedLists;\r\n  // }, [sort]);\r\n\r\n  // 確認のため設置\r\n  // console.log(list);\r\n\r\n\r\n  return (\r\n    <div className=\"Process\">\r\n      <div className=\"ProcessContainer\">\r\n        <div className=\"ProcessMain\">\r\n          <div className=\"ProcessList\">\r\n            { list.length > 0 && <div>\r\n              <h1>【チーム一覧】</h1>\r\n              <p>Q：試合数　P：勝ち点　S：得失点差</p>\r\n              <div className=\"ProcessList__Border\">\r\n                <div className=\"Head\">\r\n                  <div className=\"name\">Team</div>\r\n                  <button className=\"gross\" onClick={sortGross}>Q</button>\r\n                  <button className=\"point\" onClick={sortPoint}>P</button>\r\n                  <button className=\"score\" onClick={sortScore}>S</button>\r\n                  <div className=\"space\"></div>\r\n                </div>\r\n                <ul className=\"Item\">\r\n                  { list.map((item:Pro, idx: number) => (\r\n                    <li className=\"ItemList\" key={item.name}>\r\n                      <div className=\"ItemList__data\">\r\n                        <div className=\"name\">{item.name}</div>\r\n                        <div className=\"gross\">{item.gross}</div>\r\n                        <div className=\"point\">{item.point}</div>\r\n                        <div className=\"score\">{item.score}</div>\r\n                        <button className=\"AddPlan\" onClick={()=> addPlan(idx)}>試合</button>\r\n                      </div>\r\n                  </li>\r\n                  ))}\r\n                </ul>\r\n              </div> \r\n\r\n            </div>}\r\n            <h1>①勝ち点を入力</h1>\r\n            <div className=\"Insert\">\r\n              <div className=\"InsertContent\">\r\n                <div className=\"InsertContent__text\">勝ち</div>\r\n                <input className=\"InsertContent__entry\" type=\"number\" id=\"win\" onChange={changeWin}></input>\r\n              </div>\r\n              <div className=\"InsertContent\">\r\n              <div className=\"InsertContent__text\">分勝</div>\r\n                <input className=\"InsertContent__entry\" type=\"number\" id=\"draw_win\" onChange={changeDrawWin}></input>\r\n              </div>\r\n              <div className=\"InsertContent\">\r\n              <div className=\"InsertContent__text\">分分</div>\r\n                <input className=\"InsertContent__entry\" type=\"number\" id=\"draw_draw\" onChange={changeDrawDraw}></input>\r\n              </div>\r\n              <div className=\"InsertContent\">\r\n              <div className=\"InsertContent__text\">分負</div>\r\n                <input className=\"InsertContent__entry\" type=\"number\" id=\"draw_lose\" onChange={changeDrawLose}></input>\r\n              </div>\r\n            </div>\r\n            <h1>②チームを登録</h1>\r\n            <div className=\"Form\">\r\n              <div className=\"FormContent\">\r\n                <input className=\"FormContent__name\" type=\"text\" id=\"name\" value={data} onChange={changeData}></input>\r\n                <button className=\"FormContent__button\" type=\"submit\" onClick={addList}>チーム登録</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"upButton\"  onClick={returnTop}></div>\r\n            <div className=\"downButton\"  onClick={goBottom}></div>\r\n          </div>\r\n          <div className=\"Result\">\r\n            <h1 className=\"title\">【対戦表】</h1>\r\n              <div className=\"Result__Border\">\r\n                { plan.map((item, idx: number) => (\r\n                  <>\r\n                    <div className={idx % 2 === 0 ? 'Flex left' : 'Flex right'} key={idx}>\r\n                      <div className=\"FlexNumber\">\r\n                        { idx % 2 === 0 && <div className=\"FlexNumber__item\">第{idx/2+1}試合</div> }\r\n                      </div>\r\n                      <div className=\"FlexCross\">\r\n                        { idx % 2 !== 0 && <div className=\"FlexCross__item\">-</div> }\r\n                        { idx % 2 !== 0 && <div className=\"FlexCross__item\">-</div> }\r\n                      </div>\r\n                      <div className=\"FlexCount\">\r\n                        { idx % 2 === 0 &&\r\n                          <div className=\"FlexCount__Button\">\r\n                            <button className=\"SubCount top\" onClick={()=> addTime1(idx, -1)}>-</button>\r\n                            <button className=\"AddCount top\" onClick={()=> addTime1(idx, 5)}>+</button>\r\n                          </div>\r\n                        }\r\n                        { idx % 2 !== 0 &&\r\n                          <div className=\"FlexCount__Point\">\r\n                            <div className=\"ResultTime\">{item.time1}</div>\r\n                          </div>\r\n                        }\r\n                        { idx % 2 === 0 &&\r\n                          <div className=\"FlexCount__Button\">\r\n                            <button className=\"SubCount bottom\" onClick={()=> addTime2(idx, -1)}>-</button>\r\n                            <button className=\"AddCount bottom\" onClick={()=> addTime2(idx, 5)}>+</button>\r\n                          </div>\r\n                        }\r\n                        { idx % 2 !== 0 &&\r\n                          <div className=\"FlexCount__Point\">\r\n                            <div className=\"ResultTime\">{item.time2}</div>\r\n                          </div>\r\n                        }\r\n                      </div>\r\n                      <div className=\"FlexName\">\r\n                        <div className=\"ResultName\">\r\n                          <p className=\"ResultName__text\">{item.name}</p>\r\n                        </div>\r\n                        <button className=\"DeleteButton\" onClick={()=> handleRemoveTask(idx)}>取消</button>\r\n                      </div>\r\n                      <div className=\"FlexCount\">\r\n                      { idx % 2 !== 0 &&\r\n                        <div className=\"FlexCount__Button\">\r\n                          <button className=\"SubCount top\" onClick={()=> addTime1(idx, -1)}>-</button>\r\n                          <button className=\"AddCount top\" onClick={()=> addTime1(idx, 5)}>+</button>\r\n                        </div>\r\n                      }\r\n                      { idx % 2 === 0 &&\r\n                        <div className=\"FlexCount__Point\">\r\n                          <div className=\"ResultTime\">{item.time1}</div>\r\n                        </div>\r\n                      }\r\n                      { idx % 2 !== 0 &&\r\n                        <div className=\"FlexCount__Button\">\r\n                          <button className=\"SubCount bottom\" onClick={()=> addTime2(idx, -1)}>-</button>\r\n                          <button className=\"AddCount bottom\" onClick={()=> addTime2(idx, 5)}>+</button>\r\n                        </div>\r\n                      }\r\n                      { idx % 2 === 0 &&\r\n                        <div className=\"FlexCount__Point\">\r\n                          <div className=\"ResultTime\">{item.time2}</div>\r\n                        </div>\r\n                      }\r\n                      </div>\r\n                    </div>\r\n                    { idx % 2 === 0 && <div className=\"Cross\">\r\n                      <div className=\"Cross__item\">\r\n                        <div className=\"Cross__text\">-</div>\r\n                      </div>\r\n                      <div className=\"Cross__item\">\r\n                        <div className=\"Cross__text\">-</div>\r\n                      </div>\r\n                    </div> }\r\n                  </>\r\n                )) }\r\n              </div>\r\n            <div>\r\n              {/* <button onClick={(e) => handleClickDownloadButton(e, \"xlsx\")}>\r\n                Excel印刷\r\n              </button> */}\r\n              {/* <button onClick={(e) => handleClickDownloadButton(e, \"csv\")}>\r\n                CSV形式\r\n              </button> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Process;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Process from './components/Process';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Process />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}