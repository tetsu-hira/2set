{"version":3,"sources":["components/Footer.tsx","components/Process.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Footer","className","Process","useState","plan","setPlan","time1","setTime1","time2","setTime2","list","setList","data","setData","count","setCount","win","setWin","lose","setLose","drawWin","setDrawWin","drawDraw","setDrawDraw","drawLose","setDrawLose","sort","setSort","title","setTitle","name","setName","useEffect","document","addTime1","index","minute","targetPlan","find","elem","nextPlan","marks","Number","prevPlan","i","countPlan","total","filter","plans","reduce","sum","element","score","amount","point","length","console","log","addTime2","onClick","newList","el1","el2","map","item","idx","gross","addName","result1","addPlan","type","id","onChange","e","target","value","window","scrollTo","top","behavior","elm","documentElement","bottom","scrollHeight","clientHeight","left","delTeam","newPlan","splice","result","result2","handleRemoveTask","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uMASeA,EAPU,WACvB,OACE,qBAAKC,UAAU,SAAf,gE,cCixBWC,EA7vBW,WAAO,IAAD,EACNC,mBAAgB,IADV,mBACvBC,EADuB,KACjBC,EADiB,OAEJF,mBAAiB,GAFb,mBAEvBG,EAFuB,KAEhBC,EAFgB,OAGJJ,mBAAiB,GAHb,mBAGvBK,EAHuB,KAGhBC,EAHgB,OAINN,mBAAgB,IAJV,mBAIvBO,EAJuB,KAIjBC,EAJiB,OAKNR,qBALM,mBAKvBS,EALuB,KAKjBC,EALiB,OAMJV,mBAAiB,GANb,mBAMvBW,EANuB,KAMhBC,EANgB,OAORZ,mBAAiB,GAPT,mBAOvBa,EAPuB,KAOlBC,EAPkB,OAQNd,mBAAiB,GARX,mBAQvBe,EARuB,KAQjBC,EARiB,OASAhB,mBAAiB,GATjB,mBASvBiB,EATuB,KASdC,EATc,OAUElB,mBAAiB,GAVnB,mBAUvBmB,EAVuB,KAUbC,EAVa,OAWEpB,mBAAiB,GAXnB,mBAWvBqB,EAXuB,KAWbC,EAXa,OAYNtB,mBAAc,IAZR,mBAYvBuB,EAZuB,KAYjBC,EAZiB,OAcJxB,mBAAiB,IAdb,mBAcvByB,GAduB,KAchBC,GAdgB,QAeN1B,mBAAiB,IAfX,qBAevB2B,GAfuB,MAejBC,GAfiB,MAyB9BC,qBAAU,WAGNC,SAASL,MADG,KAAVA,GACe,YAEAA,MAIrB,IA2DMM,GAAW,SAACC,EAAeC,GAC/B,IAAMC,EAAkBjC,EAAKkC,MAAK,SAACC,GAAD,OAAUnC,EAAK+B,KAAWI,KAI5D,GAHAF,EAAW/B,MAAQ+B,EAAW/B,MAAQ8B,EACtC7B,EAAS8B,EAAW/B,OAEhB6B,EAAQ,IAAM,EAAG,CACnB,IAAMK,EAAgBpC,EAAKkC,MAAK,SAACC,GAAD,OAAUnC,EAAK+B,EAAQ,KAAOI,KAC9DF,EAAWvB,MACTuB,EAAW/B,MAAQ+B,EAAW7B,OAASgC,EAASlC,MAAQkC,EAAShC,OACnEgC,EAAS1B,MACP0B,EAASlC,MAAQkC,EAAShC,OAAS6B,EAAW/B,MAAQ+B,EAAW7B,OACnEO,EAASsB,EAAWvB,OAElBuB,EAAW/B,MAAQkC,EAASlC,OAC5B+B,EAAW7B,MAAQgC,EAAShC,OAE5B6B,EAAWI,MAAQC,OAAO1B,GAC1BwB,EAASC,MAAQC,OAAOxB,IAExBmB,EAAW/B,MAAQkC,EAASlC,OAC5B+B,EAAW7B,MAAQgC,EAAShC,OAE5B6B,EAAWI,MAAQC,OAAOxB,GAC1BsB,EAASC,MAAQC,OAAO1B,IAEvBqB,EAAW/B,MAAQkC,EAASlC,OAC3B+B,EAAW7B,MAAQgC,EAAShC,OAC7B6B,EAAW/B,MAAQkC,EAASlC,OAAS+B,EAAW7B,MAAQgC,EAAShC,MAGhE6B,EAAW/B,MAAQ+B,EAAW7B,MAC9BgC,EAASlC,MAAQkC,EAAShC,OAE1B6B,EAAWI,MAAQC,OAAOtB,GAC1BoB,EAASC,MAAQC,OAAOlB,IAExBa,EAAW/B,MAAQ+B,EAAW7B,MAC9BgC,EAASlC,MAAQkC,EAAShC,OAE1B6B,EAAWI,MAAQC,OAAOlB,GAC1BgB,EAASC,MAAQC,OAAOtB,KAExBiB,EAAWI,MAAQC,OAAOpB,GAC1BkB,EAASC,MAAQC,OAAOpB,KAG1Be,EAAWI,MAAQC,OAAOxB,GAC1BsB,EAASC,MAAQC,OAAOxB,QAErB,CACL,IAAMyB,EAAgBvC,EAAKkC,MAAK,SAACC,GAAD,OAAUnC,EAAK+B,EAAQ,KAAOI,KAC9DF,EAAWvB,MACTuB,EAAW/B,MAAQ+B,EAAW7B,OAASmC,EAASrC,MAAQqC,EAASnC,OACnEmC,EAAS7B,MACP6B,EAASrC,MAAQqC,EAASnC,OAAS6B,EAAW/B,MAAQ+B,EAAW7B,OACnEO,EAASsB,EAAWvB,OAElBuB,EAAW/B,MAAQqC,EAASrC,OAC5B+B,EAAW7B,MAAQmC,EAASnC,OAE5B6B,EAAWI,MAAQC,OAAO1B,GAC1B2B,EAASF,MAAQC,OAAOxB,IAExBmB,EAAW/B,MAAQqC,EAASrC,OAC5B+B,EAAW7B,MAAQmC,EAASnC,OAE5B6B,EAAWI,MAAQC,OAAOxB,GAC1ByB,EAASF,MAAQC,OAAO1B,IAEvBqB,EAAW/B,MAAQqC,EAASrC,OAC3B+B,EAAW7B,MAAQmC,EAASnC,OAC7B6B,EAAW/B,MAAQqC,EAASrC,OAAS+B,EAAW7B,MAAQmC,EAASnC,MAGhE6B,EAAW/B,MAAQ+B,EAAW7B,MAC9BmC,EAASrC,MAAQqC,EAASnC,OAE1B6B,EAAWI,MAAQC,OAAOtB,GAC1BuB,EAASF,MAAQC,OAAOlB,IAExBa,EAAW/B,MAAQ+B,EAAW7B,MAC9BmC,EAASrC,MAAQqC,EAASnC,OAE1B6B,EAAWI,MAAQC,OAAOlB,GAC1BmB,EAASF,MAAQC,OAAOtB,KAExBiB,EAAWI,MAAQC,OAAOpB,GAC1BqB,EAASF,MAAQC,OAAOpB,KAG1Be,EAAWI,MAAQC,OAAOxB,GAC1ByB,EAASF,MAAQC,OAAOxB,IAI5B,IA/FkD,eA+FzC0B,GACP,IAAMC,EAAiBnC,EAAK4B,MAAK,SAACC,GAAD,OAAU7B,EAAKkC,KAAOL,KAKjDO,EAHgB1C,EAAK2C,QAAO,SAACC,GACjC,OAAOA,EAAMlB,OAASe,EAAUf,QAEXmB,QAAO,SAAUC,EAAaC,GACnD,OAAOD,EAAMC,EAAQrC,QACpB,GAEiBJ,EAAK4B,MAAK,SAACC,GAAD,OAAUA,EAAKT,OAASe,EAAUf,QACzDsB,MAAQN,EAEf,IAGMO,EAHgBjD,EAAK2C,QAAO,SAACC,GACjC,OAAOA,EAAMlB,OAASe,EAAUf,QAEVmB,QAAO,SAAUC,EAAaC,GACpD,OAAOD,EAAMC,EAAQV,QACpB,GAEoB/B,EAAK4B,MAAK,SAACC,GAAD,OAAUA,EAAKT,OAASe,EAAUf,QACzDwB,MAAQD,GArBXT,EAAI,EAAGA,EAAIlC,EAAK6C,OAAQX,IAAM,EAA9BA,GAyBTY,QAAQC,IAAI,0DACZD,QAAQC,IAAInD,GACZkD,QAAQC,IAAI3C,IAER4C,GAAW,SAACvB,EAAeC,GAC/B,IAAMC,EAAkBjC,EAAKkC,MAAK,SAACC,GAAD,OAAUnC,EAAK+B,KAAWI,KAI5D,GAHAF,EAAW7B,MAAQ6B,EAAW7B,MAAQ4B,EACtC3B,EAAS4B,EAAW7B,OAEhB2B,EAAQ,IAAM,EAAG,CACnB,IAAMK,EAAgBpC,EAAKkC,MAAK,SAACC,GAAD,OAAUnC,EAAK+B,EAAQ,KAAOI,KAC9DF,EAAWvB,MACTuB,EAAW/B,MAAQ+B,EAAW7B,OAASgC,EAASlC,MAAQkC,EAAShC,OACnEgC,EAAS1B,MACP0B,EAASlC,MAAQkC,EAAShC,OAAS6B,EAAW/B,MAAQ+B,EAAW7B,OACnEO,EAASsB,EAAWvB,OAElBuB,EAAW/B,MAAQkC,EAASlC,OAC5B+B,EAAW7B,MAAQgC,EAAShC,OAE5B6B,EAAWI,MAAQC,OAAO1B,GAC1BwB,EAASC,MAAQC,OAAOxB,IAExBmB,EAAW/B,MAAQkC,EAASlC,OAC5B+B,EAAW7B,MAAQgC,EAAShC,OAE5B6B,EAAWI,MAAQC,OAAOxB,GAC1BsB,EAASC,MAAQC,OAAO1B,IAEvBqB,EAAW/B,MAAQkC,EAASlC,OAC3B+B,EAAW7B,MAAQgC,EAAShC,OAC7B6B,EAAW/B,MAAQkC,EAASlC,OAAS+B,EAAW7B,MAAQgC,EAAShC,MAGhE6B,EAAW/B,MAAQ+B,EAAW7B,MAC9BgC,EAASlC,MAAQkC,EAAShC,OAE1B6B,EAAWI,MAAQC,OAAOtB,GAC1BoB,EAASC,MAAQC,OAAOlB,IAExBa,EAAW/B,MAAQ+B,EAAW7B,MAC9BgC,EAASlC,MAAQkC,EAAShC,OAE1B6B,EAAWI,MAAQC,OAAOlB,GAC1BgB,EAASC,MAAQC,OAAOtB,KAExBiB,EAAWI,MAAQC,OAAOpB,GAC1BkB,EAASC,MAAQC,OAAOpB,KAG1Be,EAAWI,MAAQC,OAAOxB,GAC1BsB,EAASC,MAAQC,OAAOxB,QAErB,CACL,IAAMyB,EAAgBvC,EAAKkC,MAAK,SAACC,GAAD,OAAUnC,EAAK+B,EAAQ,KAAOI,KAC9DF,EAAWvB,MACTuB,EAAW/B,MAAQ+B,EAAW7B,OAASmC,EAASrC,MAAQqC,EAASnC,OACnEmC,EAAS7B,MACP6B,EAASrC,MAAQqC,EAASnC,OAAS6B,EAAW/B,MAAQ+B,EAAW7B,OACnEO,EAASsB,EAAWvB,OAElBuB,EAAW/B,MAAQqC,EAASrC,OAC5B+B,EAAW7B,MAAQmC,EAASnC,OAE5B6B,EAAWI,MAAQC,OAAO1B,GAC1B2B,EAASF,MAAQC,OAAOxB,IAExBmB,EAAW/B,MAAQqC,EAASrC,OAC5B+B,EAAW7B,MAAQmC,EAASnC,OAE5B6B,EAAWI,MAAQC,OAAOxB,GAC1ByB,EAASF,MAAQC,OAAO1B,IAEvBqB,EAAW/B,MAAQqC,EAASrC,OAC3B+B,EAAW7B,MAAQmC,EAASnC,OAC7B6B,EAAW/B,MAAQqC,EAASrC,OAAS+B,EAAW7B,MAAQmC,EAASnC,MAGhE6B,EAAW/B,MAAQ+B,EAAW7B,MAC9BmC,EAASrC,MAAQqC,EAASnC,OAE1B6B,EAAWI,MAAQC,OAAOtB,GAC1BuB,EAASF,MAAQC,OAAOlB,IAExBa,EAAW/B,MAAQ+B,EAAW7B,MAC9BmC,EAASrC,MAAQqC,EAASnC,OAE1B6B,EAAWI,MAAQC,OAAOlB,GAC1BmB,EAASF,MAAQC,OAAOtB,KAExBiB,EAAWI,MAAQC,OAAOpB,GAC1BqB,EAASF,MAAQC,OAAOpB,KAG1Be,EAAWI,MAAQC,OAAOxB,GAC1ByB,EAASF,MAAQC,OAAOxB,IAI5B,IA/FkD,eA+FzC0B,GACP,IAAMC,EAAiBnC,EAAK4B,MAAK,SAACC,GAAD,OAAU7B,EAAKkC,KAAOL,KAKjDO,EAHgB1C,EAAK2C,QAAO,SAACC,GACjC,OAAOA,EAAMlB,OAASe,EAAUf,QAEXmB,QAAO,SAAUC,EAAaC,GACnD,OAAOD,EAAMC,EAAQrC,QACpB,GAEiBJ,EAAK4B,MAAK,SAACC,GAAD,OAAUA,EAAKT,OAASe,EAAUf,QACzDsB,MAAQN,EAEf,IAGMO,EAHgBjD,EAAK2C,QAAO,SAACC,GACjC,OAAOA,EAAMlB,OAASe,EAAUf,QAEVmB,QAAO,SAAUC,EAAaC,GACpD,OAAOD,EAAMC,EAAQV,QACpB,GAEoB/B,EAAK4B,MAAK,SAACC,GAAD,OAAUA,EAAKT,OAASe,EAAUf,QACzDwB,MAAQD,GArBXT,EAAI,EAAGA,EAAIlC,EAAK6C,OAAQX,IAAM,EAA9BA,GAyBTY,QAAQC,IAAIjD,GACZgD,QAAQC,IAAI3C,IAqId,OACE,qCACE,qBAAKb,UAAU,SAAf,SACI2B,GAGA,qBAAK3B,UAAU,WAAf,SAA2B2B,KAF3B,qBAAK3B,UAAU,WAAf,yBAKJ,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,cAAf,UACGS,EAAK6C,OAAS,GACb,gCACE,oBAAItD,UAAU,WAAd,wDACA,8HACA,sBAAKA,UAAU,sBAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,OAAf,sBACA,wBAAQA,UAAU,QAAQ0D,QAxF5B,WAChB,IAAIC,EACJA,EAAUlD,EAAKgB,MAAK,SAACmC,EAAKC,GACxB,OAAID,EAAG,MAAYC,EAAG,MACb,EAELD,EAAG,MAAYC,EAAG,OACZ,EAEH,KAETnC,EAAQ,SACR6B,QAAQC,IAAI/B,GACZf,EAAQiD,IA2EU,eAGA,wBAAQ3D,UAAU,QAAQ0D,QA5E5B,WAChB,IAAIC,EACJA,EAAUlD,EAAKgB,MAAK,SAACmC,EAAKC,GACxB,OAAID,EAAG,MAAYC,EAAG,MACb,EAELD,EAAG,MAAYC,EAAG,OACZ,EAEH,KAETnC,EAAQ,SACRhB,EAAQiD,IAgEU,eAGA,wBAAQ3D,UAAU,QAAQ0D,QAjE5B,WAChB,IAAIC,EACJA,EAAUlD,EAAKgB,MAAK,SAACmC,EAAKC,GACxB,OAAID,EAAG,MAAYC,EAAG,MACb,EAELD,EAAG,MAAYC,EAAG,OACZ,EAEH,KAETnC,EAAQ,SACRhB,EAAQiD,IAqDU,eAGA,qBAAK3D,UAAU,aAEjB,oBAAIA,UAAU,OAAd,SACGS,EAAKqD,KAAI,SAACC,EAAWC,GAAZ,OACR,oBAAIhE,UAAU,WAAd,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,OAAf,SAAuB+D,EAAKlC,OAC5B,qBAAK7B,UAAU,QAAf,SAAwB+D,EAAKE,QAC7B,qBAAKjE,UAAU,QAAf,SAAwB+D,EAAKV,QAC7B,qBAAKrD,UAAU,QAAf,SAAwB+D,EAAKZ,QAC7B,wBACEnD,UAAU,UACV0D,QAAS,kBAhbrB,SAACxB,GACf,IAAMgC,EAAezD,EAAK4B,MAAK,SAACC,GAAD,OAAU7B,EAAKyB,KAAWI,KACzDlC,EAAQ,GAAD,mBACFD,GADE,CAEL,CAAE0B,KAAMqC,EAAQrC,KAAMxB,MAAO,EAAGE,MAAO,EAAGM,MAAO,EAAG2B,MAAO,MAE7D,IAGM2B,EAHchE,EAAK2C,QAAO,SAACC,GAC/B,OAAOA,EAAMlB,OAASpB,EAAKyB,GAAOL,QAEbyB,OAAS,EAChC7C,EAAKyB,GAAO+B,MAAQE,EAsaqBC,CAAQJ,IAFzB,8BAN0BD,EAAKlC,kBAmB3CF,IACA,gCACE,kFACA,qBAAK3B,UAAU,OAAf,SACE,sBAAKA,UAAU,cAAf,UACE,uBACEA,UAAU,oBACVqE,KAAK,OACLC,GAAG,OACHC,SAngBF,SAACC,GACnB1C,GAAQ0C,EAAEC,OAAOC,OACjBnB,QAAQC,IAAIgB,MAmgBM,wBACExE,UAAU,sBACVqE,KAAK,SACLX,QApgBN,WACd9B,GAASC,KAggBS,mCAWR,kFACA,sBAAK7B,UAAU,SAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,sBAAf,0BACA,uBACEA,UAAU,uBACVqE,KAAK,SACLC,GAAG,MACHC,SAngBA,SAACC,GACjBxD,EAAOwD,EAAEC,OAAOC,OAChBxD,EAAQ,SAogBI,sBAAKlB,UAAU,gBAAf,UACE,qBAAKA,UAAU,sBAAf,0BACA,uBACEA,UAAU,uBACVqE,KAAK,SACLC,GAAG,WACHC,SAxgBI,SAACC,GACrBpD,EAAWoD,EAAEC,OAAOC,aA0gBR,sBAAK1E,UAAU,gBAAf,UACE,qBAAKA,UAAU,sBAAf,0BACA,uBACEA,UAAU,uBACVqE,KAAK,SACLC,GAAG,YACHC,SA9gBK,SAACC,GACtBlD,EAAYkD,EAAEC,OAAOC,aAghBT,sBAAK1E,UAAU,gBAAf,UACE,qBAAKA,UAAU,sBAAf,0BACA,uBACEA,UAAU,uBACVqE,KAAK,SACLC,GAAG,YACHC,SAphBK,SAACC,GACtBhD,EAAYgD,EAAEC,OAAOC,gBAuhBX,kFACA,qBAAK1E,UAAU,OAAf,SACE,sBAAKA,UAAU,cAAf,UACE,uBACEA,UAAU,oBACVqE,KAAK,OACLC,GAAG,OACHI,MAAO/D,EACP4D,SA9iBC,SAACC,GAClB5D,EAAQ4D,EAAEC,OAAOC,UA+iBH,wBACE1E,UAAU,sBACVqE,KAAK,SACLX,QAliBF,WACdhD,EAAQ,GAAD,mBACFD,GADE,CAEL,CACE6D,GAAI3D,EACJkB,KAAMlB,EACNsD,MAAO,EACPZ,MAAO,EACPF,MAAO,MAGXvC,EAAQ,KAohBM,gCASHH,EAAK6C,OAAS,GACb,qBAAKtD,UAAU,WAAW0D,QA7NtB,WAChBiB,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,cA4NDrE,EAAK6C,OAAS,GACb,qBAAKtD,UAAU,aAAa0D,QAzNzB,WACf,IAAIqB,EAAM/C,SAASgD,gBAEfC,EAASF,EAAIG,aAAeH,EAAII,aAEpCR,OAAOC,SAAS,CACdE,SAAU,SACVM,KAAM,EACNP,IAAKI,UAoNE9E,EAAKmD,OAAS,GACb,sBAAKtD,UAAU,SAAf,UACE,oBAAIA,UAAU,QAAd,4CACA,qBAAKA,UAAU,iBAAf,SACGG,EAAK2D,KAAI,SAACC,EAAMC,GAAP,OACR,qCACE,sBACEhE,UAAWgE,EAAM,IAAM,EAAI,YAAc,aAD3C,UAIE,qBAAKhE,UAAU,aAAf,SACGgE,EAAM,IAAM,GACX,sBAAKhE,UAAU,mBAAf,mBACIgE,EAAM,EAAI,EADd,oBAKJ,sBAAKhE,UAAU,YAAf,UACGgE,EAAM,IAAM,GACX,qBAAKhE,UAAU,kBAAf,eAEDgE,EAAM,IAAM,GACX,qBAAKhE,UAAU,kBAAf,kBAGJ,sBAAKA,UAAU,YAAf,UACGgE,EAAM,IAAM,GACX,sBAAKhE,UAAU,oBAAf,UACE,wBACEA,UAAU,eACV0D,QAAS,kBAAMzB,GAAS+B,GAAM,IAFhC,SAIE,qBAAKhE,UAAU,YAAf,iBAEF,wBACEA,UAAU,eACV0D,QAAS,kBAAMzB,GAAS+B,EAAK,IAF/B,SAIE,qBAAKhE,UAAU,YAAf,oBAILgE,EAAM,IAAM,GACX,qBAAKhE,UAAU,mBAAf,SACE,qBAAKA,UAAU,aAAf,SAA6B+D,EAAK1D,UAGrC2D,EAAM,IAAM,GACX,sBAAKhE,UAAU,oBAAf,UACE,wBACEA,UAAU,kBACV0D,QAAS,kBAAMD,GAASO,GAAM,IAFhC,SAIE,qBAAKhE,UAAU,YAAf,iBAEF,wBACEA,UAAU,kBACV0D,QAAS,kBAAMD,GAASO,EAAK,IAF/B,SAIE,qBAAKhE,UAAU,YAAf,oBAILgE,EAAM,IAAM,GACX,qBAAKhE,UAAU,mBAAf,SACE,qBAAKA,UAAU,aAAf,SAA6B+D,EAAKxD,aAIxC,sBAAKP,UAAU,WAAf,UACE,qBAAKA,UAAU,aAAf,SACE,mBAAGA,UAAU,mBAAb,SAAiC+D,EAAKlC,SAExC,wBACE7B,UAAU,eACV0D,QAAS,kBA3mBV,SAACxB,GACxB,IAAMmD,EAAelF,EAAKkC,MAAK,SAACC,GAAD,OAAUnC,EAAK+B,KAAWI,KACnDgD,EAAO,YAAOnF,GACpBmF,EAAQC,OAAOrD,EAAO,GACtB9B,EAAQkF,GACR,IAAME,EAAcF,EAAQxC,QAAO,SAACC,GAClC,OAAOA,EAAMlB,OAASwD,EAAQxD,QAE1BsC,EAAe1D,EAAK4B,MAAK,SAACC,GAAD,OAAUA,EAAKT,OAASwD,EAAQxD,QACzD4D,EAAUD,EAAOlC,OACvBa,EAAQF,MAAQwB,EAimBuBC,CAAiB1B,IAFlC,6BAOF,sBAAKhE,UAAU,YAAf,UACGgE,EAAM,IAAM,GACX,sBAAKhE,UAAU,oBAAf,UACE,wBACEA,UAAU,eACV0D,QAAS,kBAAMzB,GAAS+B,GAAM,IAFhC,SAIE,qBAAKhE,UAAU,YAAf,iBAEF,wBACEA,UAAU,eACV0D,QAAS,kBAAMzB,GAAS+B,EAAK,IAF/B,SAIE,qBAAKhE,UAAU,YAAf,oBAILgE,EAAM,IAAM,GACX,qBAAKhE,UAAU,mBAAf,SACE,qBAAKA,UAAU,aAAf,SAA6B+D,EAAK1D,UAGrC2D,EAAM,IAAM,GACX,sBAAKhE,UAAU,oBAAf,UACE,wBACEA,UAAU,kBACV0D,QAAS,kBAAMD,GAASO,GAAM,IAFhC,SAIE,qBAAKhE,UAAU,YAAf,iBAEF,wBACEA,UAAU,kBACV0D,QAAS,kBAAMD,GAASO,EAAK,IAF/B,SAIE,qBAAKhE,UAAU,YAAf,oBAILgE,EAAM,IAAM,GACX,qBAAKhE,UAAU,mBAAf,SACE,qBAAKA,UAAU,aAAf,SAA6B+D,EAAKxD,eAhHnCyD,GAqHNA,EAAM,IAAM,GACX,sBAAKhE,UAAU,QAAf,UACE,qBAAKA,UAAU,cAAf,SACE,qBAAKA,UAAU,cAAf,iBAEF,qBAAKA,UAAU,cAAf,SACE,qBAAKA,UAAU,cAAf,4BAOZ,sCCtvBD2F,EATO,WACpB,OACE,sBAAK3F,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCKS4F,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvE,SAASwE,eAAe,SAM1BZ,M","file":"static/js/main.d142aa4f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <div className=\"Footer\">© All rights reserved by Tetsuhiro.Hirabayashi</div>\r\n  )\r\n}\r\n\r\n\r\nexport default Footer;\r\n","import { useState, useEffect } from \"react\";\r\nimport * as React from \"react\";\r\n// import ExcelJS from \"exceljs\";\r\n// import File from \"./File\";\r\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\"\r\n// import Select from 'react-select';\r\n// import ReactDOM from \"react-dom\";\r\n\r\ntype Pro = {\r\n  id: number;\r\n  name: any;\r\n  gross: number;\r\n  point: number;\r\n  score: number;\r\n};\r\n\r\ntype Scr = {\r\n  name: any;\r\n  time1: number;\r\n  time2: number;\r\n  count: number;\r\n  marks: number;\r\n};\r\n\r\nconst Process: React.FC = () => {\r\n  const [plan, setPlan] = useState<Scr[]>([]);\r\n  const [time1, setTime1] = useState<number>(0);\r\n  const [time2, setTime2] = useState<number>(0);\r\n  const [list, setList] = useState<Pro[]>([]);\r\n  const [data, setData] = useState<any>();\r\n  const [count, setCount] = useState<number>(0);\r\n  const [win, setWin] = useState<number>(0);\r\n  const [lose, setLose] = useState<number>(0);\r\n  const [drawWin, setDrawWin] = useState<number>(0);\r\n  const [drawDraw, setDrawDraw] = useState<number>(0);\r\n  const [drawLose, setDrawLose] = useState<number>(0);\r\n  const [sort, setSort] = useState<any>(\"\");\r\n\r\n  const [title, setTitle] = useState<string>(\"\");\r\n  const [name, setName] = useState<string>(\"\");\r\n\r\n  const changeTitle = (e: any) => {\r\n    setName(e.target.value);\r\n    console.log(e);\r\n  };\r\n  const onTitle = () => {\r\n    setTitle(name);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Update the document title using the browser API\r\n    if (title === \"\") {\r\n      document.title = \"2setMatch\";\r\n    } else {\r\n      document.title = title;\r\n    }\r\n  });\r\n\r\n  const changeData = (e: any) => {\r\n    setData(e.target.value);\r\n    // setCount(Math.random());\r\n  };\r\n  const changeWin = (e: any) => {\r\n    setWin(e.target.value);\r\n    setLose(0);\r\n  };\r\n  const changeDrawWin = (e: any) => {\r\n    setDrawWin(e.target.value);\r\n  };\r\n  const changeDrawDraw = (e: any) => {\r\n    setDrawDraw(e.target.value);\r\n  };\r\n  const changeDrawLose = (e: any) => {\r\n    setDrawLose(e.target.value);\r\n  };\r\n  const addList = () => {\r\n    setList([\r\n      ...list,\r\n      {\r\n        id: data,\r\n        name: data,\r\n        gross: 0,\r\n        point: 0,\r\n        score: 0,\r\n      },\r\n    ]);\r\n    setData(\"\");\r\n  };\r\n\r\n  // 対戦表に登録したチームの取り消し\r\n  const handleRemoveTask = (index: number) => {\r\n    const delTeam: any = plan.find((elem) => plan[index] === elem);\r\n    const newPlan = [...plan];\r\n    newPlan.splice(index, 1);\r\n    setPlan(newPlan);\r\n    const result: any = newPlan.filter((plans) => {\r\n      return plans.name === delTeam.name;\r\n    });\r\n    const result1: any = list.find((elem) => elem.name === delTeam.name);\r\n    const result2 = result.length;\r\n    result1.gross = result2;\r\n  };\r\n\r\n  // 対戦表にチームを登録\r\n  const addPlan = (index: number) => {\r\n    const addName: any = list.find((elem) => list[index] === elem);\r\n    setPlan([\r\n      ...plan,\r\n      { name: addName.name, time1: 0, time2: 0, count: 0, marks: 0 },\r\n    ]);\r\n    const result: any = plan.filter((plans) => {\r\n      return plans.name === list[index].name;\r\n    });\r\n    const result1 = result.length + 1;\r\n    list[index].gross = result1;\r\n  };\r\n\r\n  const addTime1 = (index: number, minute: number) => {\r\n    const targetPlan: any = plan.find((elem) => plan[index] === elem);\r\n    targetPlan.time1 = targetPlan.time1 + minute;\r\n    setTime1(targetPlan.time1);\r\n    // 奇数か偶数で処理を変える\r\n    if (index % 2 === 0) {\r\n      const nextPlan: any = plan.find((elem) => plan[index + 1] === elem);\r\n      targetPlan.count =\r\n        targetPlan.time1 + targetPlan.time2 - (nextPlan.time1 + nextPlan.time2);\r\n      nextPlan.count =\r\n        nextPlan.time1 + nextPlan.time2 - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (\r\n        targetPlan.time1 > nextPlan.time1 &&\r\n        targetPlan.time2 > nextPlan.time2\r\n      ) {\r\n        targetPlan.marks = Number(win);\r\n        nextPlan.marks = Number(lose);\r\n      } else if (\r\n        targetPlan.time1 < nextPlan.time1 &&\r\n        targetPlan.time2 < nextPlan.time2\r\n      ) {\r\n        targetPlan.marks = Number(lose);\r\n        nextPlan.marks = Number(win);\r\n      } else if (\r\n        (targetPlan.time1 < nextPlan.time1 &&\r\n          targetPlan.time2 > nextPlan.time2) ||\r\n        (targetPlan.time1 > nextPlan.time1 && targetPlan.time2 < nextPlan.time2)\r\n      ) {\r\n        if (\r\n          targetPlan.time1 + targetPlan.time2 >\r\n          nextPlan.time1 + nextPlan.time2\r\n        ) {\r\n          targetPlan.marks = Number(drawWin);\r\n          nextPlan.marks = Number(drawLose);\r\n        } else if (\r\n          targetPlan.time1 + targetPlan.time2 <\r\n          nextPlan.time1 + nextPlan.time2\r\n        ) {\r\n          targetPlan.marks = Number(drawLose);\r\n          nextPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n          nextPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n        nextPlan.marks = Number(lose);\r\n      }\r\n    } else {\r\n      const prevPlan: any = plan.find((elem) => plan[index - 1] === elem);\r\n      targetPlan.count =\r\n        targetPlan.time1 + targetPlan.time2 - (prevPlan.time1 + prevPlan.time2);\r\n      prevPlan.count =\r\n        prevPlan.time1 + prevPlan.time2 - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (\r\n        targetPlan.time1 > prevPlan.time1 &&\r\n        targetPlan.time2 > prevPlan.time2\r\n      ) {\r\n        targetPlan.marks = Number(win);\r\n        prevPlan.marks = Number(lose);\r\n      } else if (\r\n        targetPlan.time1 < prevPlan.time1 &&\r\n        targetPlan.time2 < prevPlan.time2\r\n      ) {\r\n        targetPlan.marks = Number(lose);\r\n        prevPlan.marks = Number(win);\r\n      } else if (\r\n        (targetPlan.time1 < prevPlan.time1 &&\r\n          targetPlan.time2 > prevPlan.time2) ||\r\n        (targetPlan.time1 > prevPlan.time1 && targetPlan.time2 < prevPlan.time2)\r\n      ) {\r\n        if (\r\n          targetPlan.time1 + targetPlan.time2 >\r\n          prevPlan.time1 + prevPlan.time2\r\n        ) {\r\n          targetPlan.marks = Number(drawWin);\r\n          prevPlan.marks = Number(drawLose);\r\n        } else if (\r\n          targetPlan.time1 + targetPlan.time2 <\r\n          prevPlan.time1 + prevPlan.time2\r\n        ) {\r\n          targetPlan.marks = Number(drawLose);\r\n          prevPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n          prevPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n        prevPlan.marks = Number(lose);\r\n      }\r\n    }\r\n    // ここから繰り返し処理\r\n    for (let i = 0; i < list.length; i++) {\r\n      const countPlan: any = list.find((elem) => list[i] === elem);\r\n      // 得失点の合計値をtotalに代入\r\n      const sumCount: any = plan.filter((plans) => {\r\n        return plans.name === countPlan.name;\r\n      });\r\n      const total = sumCount.reduce(function (sum: number, element: any) {\r\n        return sum + element.count;\r\n      }, 0);\r\n      // 合計をlistに反映\r\n      const update: any = list.find((elem) => elem.name === countPlan.name);\r\n      update.score = total;\r\n      // 勝ち点の合計値をamountに代入\r\n      const sumMarks: any = plan.filter((plans) => {\r\n        return plans.name === countPlan.name;\r\n      });\r\n      const amount = sumMarks.reduce(function (sum: number, element: any) {\r\n        return sum + element.marks;\r\n      }, 0);\r\n      // 合計をlistに反映\r\n      const overwrite: any = list.find((elem) => elem.name === countPlan.name);\r\n      overwrite.point = amount;\r\n    }\r\n    // ここまで繰り返し\r\n    // コンソールでエラーを回避\r\n    console.log(\"ここからエラー回避\");\r\n    console.log(time1);\r\n    console.log(count);\r\n  };\r\n  const addTime2 = (index: number, minute: number) => {\r\n    const targetPlan: any = plan.find((elem) => plan[index] === elem);\r\n    targetPlan.time2 = targetPlan.time2 + minute;\r\n    setTime2(targetPlan.time2);\r\n    // 奇数か偶数で処理を変える\r\n    if (index % 2 === 0) {\r\n      const nextPlan: any = plan.find((elem) => plan[index + 1] === elem);\r\n      targetPlan.count =\r\n        targetPlan.time1 + targetPlan.time2 - (nextPlan.time1 + nextPlan.time2);\r\n      nextPlan.count =\r\n        nextPlan.time1 + nextPlan.time2 - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (\r\n        targetPlan.time1 > nextPlan.time1 &&\r\n        targetPlan.time2 > nextPlan.time2\r\n      ) {\r\n        targetPlan.marks = Number(win);\r\n        nextPlan.marks = Number(lose);\r\n      } else if (\r\n        targetPlan.time1 < nextPlan.time1 &&\r\n        targetPlan.time2 < nextPlan.time2\r\n      ) {\r\n        targetPlan.marks = Number(lose);\r\n        nextPlan.marks = Number(win);\r\n      } else if (\r\n        (targetPlan.time1 < nextPlan.time1 &&\r\n          targetPlan.time2 > nextPlan.time2) ||\r\n        (targetPlan.time1 > nextPlan.time1 && targetPlan.time2 < nextPlan.time2)\r\n      ) {\r\n        if (\r\n          targetPlan.time1 + targetPlan.time2 >\r\n          nextPlan.time1 + nextPlan.time2\r\n        ) {\r\n          targetPlan.marks = Number(drawWin);\r\n          nextPlan.marks = Number(drawLose);\r\n        } else if (\r\n          targetPlan.time1 + targetPlan.time2 <\r\n          nextPlan.time1 + nextPlan.time2\r\n        ) {\r\n          targetPlan.marks = Number(drawLose);\r\n          nextPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n          nextPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n        nextPlan.marks = Number(lose);\r\n      }\r\n    } else {\r\n      const prevPlan: any = plan.find((elem) => plan[index - 1] === elem);\r\n      targetPlan.count =\r\n        targetPlan.time1 + targetPlan.time2 - (prevPlan.time1 + prevPlan.time2);\r\n      prevPlan.count =\r\n        prevPlan.time1 + prevPlan.time2 - (targetPlan.time1 + targetPlan.time2);\r\n      setCount(targetPlan.count);\r\n      if (\r\n        targetPlan.time1 > prevPlan.time1 &&\r\n        targetPlan.time2 > prevPlan.time2\r\n      ) {\r\n        targetPlan.marks = Number(win);\r\n        prevPlan.marks = Number(lose);\r\n      } else if (\r\n        targetPlan.time1 < prevPlan.time1 &&\r\n        targetPlan.time2 < prevPlan.time2\r\n      ) {\r\n        targetPlan.marks = Number(lose);\r\n        prevPlan.marks = Number(win);\r\n      } else if (\r\n        (targetPlan.time1 < prevPlan.time1 &&\r\n          targetPlan.time2 > prevPlan.time2) ||\r\n        (targetPlan.time1 > prevPlan.time1 && targetPlan.time2 < prevPlan.time2)\r\n      ) {\r\n        if (\r\n          targetPlan.time1 + targetPlan.time2 >\r\n          prevPlan.time1 + prevPlan.time2\r\n        ) {\r\n          targetPlan.marks = Number(drawWin);\r\n          prevPlan.marks = Number(drawLose);\r\n        } else if (\r\n          targetPlan.time1 + targetPlan.time2 <\r\n          prevPlan.time1 + prevPlan.time2\r\n        ) {\r\n          targetPlan.marks = Number(drawLose);\r\n          prevPlan.marks = Number(drawWin);\r\n        } else {\r\n          targetPlan.marks = Number(drawDraw);\r\n          prevPlan.marks = Number(drawDraw);\r\n        }\r\n      } else {\r\n        targetPlan.marks = Number(lose);\r\n        prevPlan.marks = Number(lose);\r\n      }\r\n    }\r\n    // ここから繰り返し処理\r\n    for (let i = 0; i < list.length; i++) {\r\n      const countPlan: any = list.find((elem) => list[i] === elem);\r\n      // 得失点の合計値をtotalに代入\r\n      const sumCount: any = plan.filter((plans) => {\r\n        return plans.name === countPlan.name;\r\n      });\r\n      const total = sumCount.reduce(function (sum: number, element: any) {\r\n        return sum + element.count;\r\n      }, 0);\r\n      // 合計をlistに反映\r\n      const update: any = list.find((elem) => elem.name === countPlan.name);\r\n      update.score = total;\r\n      // 勝ち点の合計値をamountに代入\r\n      const sumMarks: any = plan.filter((plans) => {\r\n        return plans.name === countPlan.name;\r\n      });\r\n      const amount = sumMarks.reduce(function (sum: number, element: any) {\r\n        return sum + element.marks;\r\n      }, 0);\r\n      // 合計をlistに反映\r\n      const overwrite: any = list.find((elem) => elem.name === countPlan.name);\r\n      overwrite.point = amount;\r\n    }\r\n    // ここまで繰り返し\r\n    // コンソールでエラーを回避\r\n    console.log(time2);\r\n    console.log(count);\r\n  };\r\n\r\n  /* いずれは実装したい\r\n  const handleClickDownloadButton = async (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    format:  \"xlsx\" | \"csv\"\r\n  ) => {\r\n    e.preventDefault();\r\n\r\n    const workbook = new ExcelJS.Workbook();\r\n    workbook.addWorksheet(\"sheet1\");\r\n    const worksheet = workbook.getWorksheet(\"sheet1\");\r\n\r\n    worksheet.columns = [\r\n      { header: \"No.\", key: \"\", width: 10 },\r\n      { header: \"工程\", key: \"name\", width: 20},\r\n      { header: \"時間\", key: \"time1\", width: 20}\r\n    ];\r\n\r\n    worksheet.addRows(plan);\r\n\r\n    const uint8Array =\r\n      format === \"xlsx\"\r\n        ? await workbook.xlsx.writeBuffer() //xlsxの場合\r\n        : await workbook.csv.writeBuffer(); //csvの場合\r\n    const blob = new Blob([uint8Array], { type: \"application/octet-binary \"});\r\n    const url = window.URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = \"NewFile.\" + format; //フォーマットによって拡張子を変える\r\n    a.click();\r\n    a.remove();\r\n  };\r\n  */\r\n\r\n  // const handleOnDragEnd = (result:any) => {\r\n  //   const items = Array.from(plan);\r\n  //   const [reorderedItem] = items.splice(result.source.index, 1);\r\n  //   items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n  //   setPlan(items);\r\n  // }\r\n\r\n  // 上にスクロール\r\n  const returnTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n  // 下にスクロール\r\n  const goBottom = () => {\r\n    var elm = document.documentElement;\r\n    //scrollHeight ページの高さ clientHeight ブラウザの高さ\r\n    var bottom = elm.scrollHeight - elm.clientHeight;\r\n    //垂直方向へ移動\r\n    window.scrollTo({\r\n      behavior: \"smooth\", // スムーズスクロールにする\r\n      left: 0, // 左から離れた位置\r\n      top: bottom, // 上から離れた位置\r\n    });\r\n  };\r\n\r\n  // ソート機能を実装\r\n  const sortGross = () => {\r\n    let newList: any;\r\n    newList = list.sort((el1, el2) => {\r\n      if (el1[\"gross\"] < el2[\"gross\"]) {\r\n        return 1;\r\n      }\r\n      if (el1[\"gross\"] > el2[\"gross\"]) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n    setSort(\"gross\");\r\n    console.log(sort);\r\n    setList(newList);\r\n  };\r\n  const sortPoint = () => {\r\n    let newList: any;\r\n    newList = list.sort((el1, el2) => {\r\n      if (el1[\"point\"] < el2[\"point\"]) {\r\n        return 1;\r\n      }\r\n      if (el1[\"point\"] > el2[\"point\"]) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n    setSort(\"point\");\r\n    setList(newList);\r\n  };\r\n  const sortScore = () => {\r\n    let newList: any;\r\n    newList = list.sort((el1, el2) => {\r\n      if (el1[\"score\"] < el2[\"score\"]) {\r\n        return 1;\r\n      }\r\n      if (el1[\"score\"] > el2[\"score\"]) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n    setSort(\"score\");\r\n    setList(newList);\r\n  };\r\n\r\n  // let sortedLists = useMemo(() => {\r\n  //   let _sortedLists = list.name;\r\n  //   if (sort.key) {\r\n  //     _sortedLists = _sortedLists.sort((a, b) => {\r\n  //       a = a[sort.key];\r\n  //       b = b[sort.key];\r\n\r\n  //       if(a === b) {\r\n  //         return 0;\r\n  //       }\r\n  //       if(a > b) {\r\n  //         return 1 * sort.order;\r\n  //       }\r\n  //       if(a < b) {\r\n  //         return -1 * sort.order;\r\n  //       }\r\n  //     });\r\n  //   }\r\n  //   return _sortedLists;\r\n  // }, [sort]);\r\n\r\n  // 確認のため設置\r\n  // console.log(list);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Header\">\r\n        {!title ? (\r\n          <div className=\"WebTitle\">2setMatch</div>\r\n        ) : (\r\n          <div className=\"WebTitle\">{title}</div>\r\n        )}\r\n      </div>\r\n      <div className=\"Process\">\r\n        <div className=\"ProcessContainer\">\r\n          <div className=\"ProcessMain\">\r\n            <div className=\"ProcessList\">\r\n              {list.length > 0 && (\r\n                <div>\r\n                  <h1 className=\"teamList\">【チーム一覧】</h1>\r\n                  <p>Q：試合数　P：勝ち点　S：得失点差</p>\r\n                  <div className=\"ProcessList__Border\">\r\n                    <div className=\"Head\">\r\n                      <div className=\"name\">TeamName</div>\r\n                      <button className=\"gross\" onClick={sortGross}>\r\n                        Q\r\n                      </button>\r\n                      <button className=\"point\" onClick={sortPoint}>\r\n                        P\r\n                      </button>\r\n                      <button className=\"score\" onClick={sortScore}>\r\n                        S\r\n                      </button>\r\n                      <div className=\"space\"></div>\r\n                    </div>\r\n                    <ul className=\"Item\">\r\n                      {list.map((item: Pro, idx: number) => (\r\n                        <li className=\"ItemList\" key={item.name}>\r\n                          <div className=\"ItemList__data\">\r\n                            <div className=\"name\">{item.name}</div>\r\n                            <div className=\"gross\">{item.gross}</div>\r\n                            <div className=\"point\">{item.point}</div>\r\n                            <div className=\"score\">{item.score}</div>\r\n                            <button\r\n                              className=\"AddPlan\"\r\n                              onClick={() => addPlan(idx)}\r\n                            >\r\n                              試合\r\n                            </button>\r\n                          </div>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {!title && (\r\n                <div>\r\n                  <h1>１．大会名を登録</h1>\r\n                  <div className=\"Form\">\r\n                    <div className=\"FormContent\">\r\n                      <input\r\n                        className=\"FormContent__name\"\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        onChange={changeTitle}\r\n                      ></input>\r\n                      <button\r\n                        className=\"FormContent__button\"\r\n                        type=\"submit\"\r\n                        onClick={onTitle}\r\n                      >\r\n                        登 録\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <h1>２．勝ち点を入力</h1>\r\n              <div className=\"Insert\">\r\n                <div className=\"InsertContent\">\r\n                  <div className=\"InsertContent__text\">勝ち</div>\r\n                  <input\r\n                    className=\"InsertContent__entry\"\r\n                    type=\"number\"\r\n                    id=\"win\"\r\n                    onChange={changeWin}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"InsertContent\">\r\n                  <div className=\"InsertContent__text\">分勝</div>\r\n                  <input\r\n                    className=\"InsertContent__entry\"\r\n                    type=\"number\"\r\n                    id=\"draw_win\"\r\n                    onChange={changeDrawWin}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"InsertContent\">\r\n                  <div className=\"InsertContent__text\">分分</div>\r\n                  <input\r\n                    className=\"InsertContent__entry\"\r\n                    type=\"number\"\r\n                    id=\"draw_draw\"\r\n                    onChange={changeDrawDraw}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"InsertContent\">\r\n                  <div className=\"InsertContent__text\">分負</div>\r\n                  <input\r\n                    className=\"InsertContent__entry\"\r\n                    type=\"number\"\r\n                    id=\"draw_lose\"\r\n                    onChange={changeDrawLose}\r\n                  ></input>\r\n                </div>\r\n              </div>\r\n              <h1>３．チームを登録</h1>\r\n              <div className=\"Form\">\r\n                <div className=\"FormContent\">\r\n                  <input\r\n                    className=\"FormContent__name\"\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    value={data}\r\n                    onChange={changeData}\r\n                  ></input>\r\n                  <button\r\n                    className=\"FormContent__button\"\r\n                    type=\"submit\"\r\n                    onClick={addList}\r\n                  >\r\n                    登 録\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              {list.length > 0 && (\r\n                <div className=\"upButton\" onClick={returnTop}></div>\r\n              )}\r\n              {list.length > 0 && (\r\n                <div className=\"downButton\" onClick={goBottom}></div>\r\n              )}\r\n            </div>\r\n            {plan.length > 0 && (\r\n              <div className=\"Result\">\r\n                <h1 className=\"title\">【対戦表】</h1>\r\n                <div className=\"Result__Border\">\r\n                  {plan.map((item, idx: number) => (\r\n                    <>\r\n                      <div\r\n                        className={idx % 2 === 0 ? \"Flex left\" : \"Flex right\"}\r\n                        key={idx}\r\n                      >\r\n                        <div className=\"FlexNumber\">\r\n                          {idx % 2 === 0 && (\r\n                            <div className=\"FlexNumber__item\">\r\n                              第{idx / 2 + 1}試合\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"FlexCross\">\r\n                          {idx % 2 !== 0 && (\r\n                            <div className=\"FlexCross__item\">-</div>\r\n                          )}\r\n                          {idx % 2 !== 0 && (\r\n                            <div className=\"FlexCross__item\">-</div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"FlexCount\">\r\n                          {idx % 2 === 0 && (\r\n                            <div className=\"FlexCount__Button\">\r\n                              <button\r\n                                className=\"SubCount top\"\r\n                                onClick={() => addTime1(idx, -1)}\r\n                              >\r\n                                <div className=\"CountText\">-</div>\r\n                              </button>\r\n                              <button\r\n                                className=\"AddCount top\"\r\n                                onClick={() => addTime1(idx, 5)}\r\n                              >\r\n                                <div className=\"CountText\">+</div>\r\n                              </button>\r\n                            </div>\r\n                          )}\r\n                          {idx % 2 !== 0 && (\r\n                            <div className=\"FlexCount__Point\">\r\n                              <div className=\"ResultTime\">{item.time1}</div>\r\n                            </div>\r\n                          )}\r\n                          {idx % 2 === 0 && (\r\n                            <div className=\"FlexCount__Button\">\r\n                              <button\r\n                                className=\"SubCount bottom\"\r\n                                onClick={() => addTime2(idx, -1)}\r\n                              >\r\n                                <div className=\"CountText\">-</div>\r\n                              </button>\r\n                              <button\r\n                                className=\"AddCount bottom\"\r\n                                onClick={() => addTime2(idx, 5)}\r\n                              >\r\n                                <div className=\"CountText\">+</div>\r\n                              </button>\r\n                            </div>\r\n                          )}\r\n                          {idx % 2 !== 0 && (\r\n                            <div className=\"FlexCount__Point\">\r\n                              <div className=\"ResultTime\">{item.time2}</div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"FlexName\">\r\n                          <div className=\"ResultName\">\r\n                            <p className=\"ResultName__text\">{item.name}</p>\r\n                          </div>\r\n                          <button\r\n                            className=\"DeleteButton\"\r\n                            onClick={() => handleRemoveTask(idx)}\r\n                          >\r\n                            取消\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"FlexCount\">\r\n                          {idx % 2 !== 0 && (\r\n                            <div className=\"FlexCount__Button\">\r\n                              <button\r\n                                className=\"SubCount top\"\r\n                                onClick={() => addTime1(idx, -1)}\r\n                              >\r\n                                <div className=\"CountText\">-</div>\r\n                              </button>\r\n                              <button\r\n                                className=\"AddCount top\"\r\n                                onClick={() => addTime1(idx, 5)}\r\n                              >\r\n                                <div className=\"CountText\">+</div>\r\n                              </button>\r\n                            </div>\r\n                          )}\r\n                          {idx % 2 === 0 && (\r\n                            <div className=\"FlexCount__Point\">\r\n                              <div className=\"ResultTime\">{item.time1}</div>\r\n                            </div>\r\n                          )}\r\n                          {idx % 2 !== 0 && (\r\n                            <div className=\"FlexCount__Button\">\r\n                              <button\r\n                                className=\"SubCount bottom\"\r\n                                onClick={() => addTime2(idx, -1)}\r\n                              >\r\n                                <div className=\"CountText\">-</div>\r\n                              </button>\r\n                              <button\r\n                                className=\"AddCount bottom\"\r\n                                onClick={() => addTime2(idx, 5)}\r\n                              >\r\n                                <div className=\"CountText\">+</div>\r\n                              </button>\r\n                            </div>\r\n                          )}\r\n                          {idx % 2 === 0 && (\r\n                            <div className=\"FlexCount__Point\">\r\n                              <div className=\"ResultTime\">{item.time2}</div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                      {idx % 2 === 0 && (\r\n                        <div className=\"Cross\">\r\n                          <div className=\"Cross__item\">\r\n                            <div className=\"Cross__text\">-</div>\r\n                          </div>\r\n                          <div className=\"Cross__item\">\r\n                            <div className=\"Cross__text\">-</div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </>\r\n                  ))}\r\n                </div>\r\n                <div>\r\n                  {/* <button onClick={(e) => handleClickDownloadButton(e, \"xlsx\")}>\r\n                  Excel印刷\r\n                </button> */}\r\n                  {/* <button onClick={(e) => handleClickDownloadButton(e, \"csv\")}>\r\n                  CSV形式\r\n                </button> */}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Process;\r\n","import React from 'react';\nimport './App.css';\nimport Footer from './components/Footer';\nimport Process from './components/Process';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Process />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}